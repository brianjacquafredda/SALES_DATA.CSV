# -*- coding: utf-8 -*-
"""Python - Pandas & Matplotlib Sales_Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dnQLnceaz7WDDDE1-MJvtKVOs_NLbUU9
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('sales_data.csv')

## Convert the Sale_Date Column into Formatted Dates
df['Sale_Date'] = pd.to_datetime(df['Sale_Date'])

## For one Category
selected_category = ["Electronics"]
df_filtered = df[df['Product_Category'] == selected_category]

## For Two Categories
## selected_categories = ["Electronics", "Clothing"]
## df_filtered = df[df['Product_Category'].isin(selected_categories)]

df_grouped = df_filtered.groupby(['Sale_Date', 'Product_Category'])['Sales_Amount'].sum().reset_index()

df_grouped['Sales_Amount'] = df_grouped['Sales_Amount'].astype(int)

start_date = "2023-01-01"

## If I want to do in-between dates
##start_date = "2024-01-01"
## end_date = "2024-06-30"

# Convert start and end dates to datetime
# start_date = pd.to_datetime(start_date)
# end_date = pd.to_datetime(end_date)

## Filter the DataFrame for dates between start_date and end_date
## df_grouped = df_grouped[(df_grouped['Sale_Date'] >= start_date) & (df_grouped['Sale_Date'] <= end_date)]

df_grouped = df_grouped[df_grouped['Sale_Date'] >= start_date]

plt.plot(df_grouped['Sale_Date'], df_grouped['Sales_Amount'], marker='o', linestyle='-')
plt.gca().yaxis.set_major_formatter(mtick.FuncFormatter(lambda x, _: f'${int(x):,}'))
plt.xlabel('Date')
plt.ylabel('Sales Amount')
plt.title('Total Sales Since 1/1/2023')
plt.legend()
plt.show()

## Basic bar chart
## plt.bar(df['Month'], df['Sales'], color='skyblue', label='Sales')
##plt.bar(df['Month'], df['Expenses'], color='lightcoral', label='Expenses', bottom=df['Sales'])
##plt.xlabel('Month')
##plt.ylabel('Amount')
## plt.title('Monthly Sales and Expenses (Bar Chart)')
##plt.legend()
## plt.show()

plt.bar(df_grouped['Sale_Date'], df_grouped['Sales_Amount'], color='skyblue', label='Sales')
plt.xlabel('Date')
plt.ylabel('Total Sales Amount')
plt.title('Sales Bar Chart')
plt.legend()
plt.show()

### Grouped bar chart
## bar_width = 0.35
## bar_positions = range(len(df['Month']))
## plt.bar(bar_positions, df['Sales'], width=bar_width, color='skyblue', label='Sales')
## plt.bar([pos + bar_width for pos in bar_positions], df['Expenses'], width=bar_width, color='lightcoral', label='Expenses')
## plt.xlabel('Month')
## plt.ylabel('Amount')
## plt.title('Monthly Sales and Expenses (Grouped Bar Chart)')
## plt.xticks([pos + bar_width / 2 for pos in bar_positions], df['Month'])
## plt.legend()
## plt.show()



